{"version":3,"sources":["pages/Login.js","pages/GetUsers.js","custom/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Login","useState","login","setLogin","username","setUsername","password","setPassword","handlerOnSubmit","event","a","preventDefault","myHeaders","Headers","append","requestOptions","axios","post","headers","response","localStorage","setItem","JSON","stringify","data","Container","className","onSubmit","onChange","e","target","value","type","placeholder","to","GetUsers","users","setUsers","useEffect","token","getItem","parse","jwt","get","fetchData","length","map","PrivateRoute","Component","component","rest","isAuthenticated","setIsAuthenticated","render","props","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kSA8CeA,MAxCf,WACE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACtBD,EAAME,kBACAC,EAAY,IAAIC,SACZC,OAAO,eAAgB,cAC3BC,EAAiB,CAACX,WAAUE,YAJZ,SAKCU,IAAMC,KAAK,mCAAoCF,EAAgB,CAACG,QAASN,IAL1E,OAKhBO,EALgB,OAMtBC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,EAASK,OACtDrB,GAAS,GAPa,2CAAH,sDAUrB,OACE,eAACsB,EAAA,EAAD,CAAWC,UAAU,MAArB,UACE,wCAGExB,GACF,uBAAMyB,SAAUnB,EAAhB,UACE,uBACEoB,SAAU,SAACC,GAAD,OAAOxB,EAAYwB,EAAEC,OAAOC,QACtCA,MAAO3B,EACP4B,KAAK,OACLC,YAAY,UACd,uBACEL,SAAU,SAACC,GAAD,OAAOtB,EAAYsB,EAAEC,OAAOC,QACtCA,MAAOzB,EACP0B,KAAK,WACLC,YAAY,kBACd,wBAAQD,KAAK,SAAb,sBAGF,cAAC,IAAD,CAAME,GAAG,aAAT,mCCTSC,MA5Bf,WACE,MAA0BlC,mBAAS,IAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KAcA,OAZAC,qBAAU,YACO,uCAAG,kCAAA5B,EAAA,2DACV6B,EAAQnB,aAAaoB,QAAQ,UADnB,yBAGAlB,KAAKmB,MAAMF,GAAlBG,EAHO,EAGPA,IAHO,SAIO1B,IAAM2B,IAAI,8BAA+B,CAACzB,QAAS,CAAC,cAAiB,UAAYwB,KAJxF,OAIVvB,EAJU,OAKdkB,EAASlB,EAASK,MALJ,2CAAH,qDAQfoB,KACC,IAGD,eAACnB,EAAA,EAAD,CAAWC,UAAU,MAArB,UACE,0CACA,gCACoB,IAAjBU,EAAMS,QAAgB,iEACtBT,EAAMS,OAAS,GAAKT,EAAMU,KAAI,SAAAV,GAC7B,OAAO,8BAAMd,KAAKC,UAAUa,e,gBCIvBW,EA1BM,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,6BACxD,EAA8CjD,mBAAS,MAAvD,mBAAOkD,EAAP,KAAwBC,EAAxB,KAUA,OATAd,qBAAU,WACR,IAAMC,EAAQnB,aAAaoB,QAAQ,SAEjCY,IADEb,KAKH,IAEqB,OAApBY,EACK,6BAGP,cAAC,IAAD,2BAAWD,GAAX,IAAiBG,OAAQ,SAAAC,GAAK,OAC5BH,EACE,cAACH,EAAD,eAAeM,IAEf,cAAC,IAAD,CAAUpB,GAAG,WCZN,SAASqB,IACtB,OACE,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIR,UAAWjD,IACjC,cAAC,EAAD,CAAcyD,KAAK,aAAaR,UAAWd,SCfrD,IAYeuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3ace088b.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport axios from 'axios';\nimport '../App.css';\nimport {Container} from 'react-bootstrap';\nimport {Link} from \"react-router-dom\";\n\nfunction Login() {\n  const [login, setLogin] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handlerOnSubmit = async (event) => {\n    event.preventDefault();\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"text/plain\");\n    const requestOptions = {username, password};\n    const response = await axios.post('http://localhost:4000/auth/login', requestOptions, {headers: myHeaders});\n    localStorage.setItem('token', JSON.stringify(response.data));\n    setLogin(true);\n  }\n\n  return (\n    <Container className=\"App\">\n      <h1>\n        Login\n      </h1>\n      {!login &&\n      <form onSubmit={handlerOnSubmit}>\n        <input\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n          type='text'\n          placeholder='Email'/>\n        <input\n          onChange={(e) => setPassword(e.target.value)}\n          value={password}\n          type='password'\n          placeholder='ContraseÃ±a'/>\n        <button type='submit'>Login</button>\n      </form>\n      }\n      <Link to='/get-users'>Ir a ver usuarios</Link>\n    </Container>\n  );\n}\n\nexport default Login;\n","import React, {useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport {Container} from 'react-bootstrap';\n\nfunction GetUsers() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const {jwt} = JSON.parse(token);\n        let response = await axios.get('http://localhost:4000/users', {headers: {'Authorization': 'Bearer ' + jwt}})\n        setUsers(response.data);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Container className=\"App\">\n      <h1>Usuarios</h1>\n      <div>\n        {users.length === 0 && <div>No tienes permisos suficientes</div>}\n        {users.length > 0 && users.map(users => {\n          return <div>{JSON.stringify(users)}</div>\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default GetUsers;\n","import React, {useEffect, useState} from 'react';\nimport {Route, Redirect} from 'react-router-dom'\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null)\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true)\n    } else {\n      setIsAuthenticated(false)\n    }\n  }, [])\n\n  if (isAuthenticated === null) {\n    return <></>\n  }\n  return (\n    <Route {...rest} render={props =>\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to='/'/>\n      )\n    }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport GetUsers from \"./pages/GetUsers\";\nimport PrivateRoute from \"./custom/PrivateRoute\";\n\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <PrivateRoute path=\"/get-users\" component={GetUsers} />\n        </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}